# program servo
 #include <Servo.h> 
 Servo myservo;  // create servo object to control a servo 
                 // a maximum of eight servo objects can be created 
 int pos = 0;    // variable to store the servo position 
 void setup() 
 { 
   myservo.attach(9);  // attaches the servo on pin 9 to the servo object 
 } 
 void loop() 
 { 
   for(pos = 0; pos < 180; pos += 1)  // goes from 0 degrees to 180 degrees 
   {                                  // in steps of 1 degree 
     myservo.write(pos);              // tell servo to go to position in variable 'pos' 
     delay(15);                       // waits 15ms for the servo to reach the position 
   } 
 //  for(pos = 180; pos>=1; pos-=1)     // goes from 180 degrees to 0 degrees 
 //  {                                
 //    myservo.write(pos);              // tell servo to go to position in variable 'pos' 
 //    delay(15);                       // waits 15ms for the servo to reach the position 
 //  } 
 }
 
 
 #program output led with button input
 /*
   Button
 
  Turns on and off a light emitting diode(LED) connected to digital  
  pin 13, when pressing a pushbutton attached to pin 2. 
 
 
  The circuit:
  * LED attached from pin 13 to ground 
  * pushbutton attached to pin 2 from +5V
  * 10K resistor attached to pin 2 from ground
 
  * Note: on most Arduinos there is already an LED on the board
  attached to pin 13.
 
 
  created 2005
  by DojoDave <http://www.0j0.org>
  modified 30 Aug 2011
  by Tom Igoe
 
  This example code is in the public domain.
 
  http://www.arduino.cc/en/Tutorial/Button
  */

 // constants won't change. They're used here to 
 // set pin numbers:
 const int buttonPin = 2;     // the number of the pushbutton pin
 const int ledPin =  13;      // the number of the LED pin

 // variables will change:
 int buttonState = 0;         // variable for reading the pushbutton status

 void setup() {
   // initialize the LED pin as an output:
   pinMode(ledPin, OUTPUT);      
   // initialize the pushbutton pin as an input:
   pinMode(buttonPin, INPUT);     
 }

 void loop(){
   // read the state of the pushbutton value:
   buttonState = digitalRead(buttonPin);

   // check if the pushbutton is pressed.
   // if it is, the buttonState is HIGH:
   if (buttonState == HIGH) {     
     // turn LED on:    
     digitalWrite(ledPin, HIGH);  
   } 
   else {
     // turn LED off:
     digitalWrite(ledPin, LOW); 
   }
 }
 
 
 
# Program Gabungan
#include "Dino.h"
#include <Servo.h>
Dino dino;

//set servo
Servo myservo;
int pos = 0;

//set input
const int buttonPin = 2;
int buttonState = 0;


// Dino.h doesn't handle TXRX. Setup a function to tell it to write to Serial.
void writeResponse(char *response) { Serial.print(response); Serial.print("\n"); }
void (*writeCallback)(char *str) = writeResponse;

void setup() {
  Serial.begin(115200);
  dino.setupWrite(writeCallback);
  //  servo and button
  myservo.attach(9); //pin 9 servo in
  pinMode(buttonPin, INPUT);
}

void loop() {
  while(Serial.available() > 0) dino.parse(Serial.read());
  dino.updateListeners();
  Serial.flush();
   // put your main code here, to run repeatedly:
  buttonState = digitalRead(buttonPin);
  if(buttonState == HIGH && pos < 98){
          myservo.write(pos++);             
          delay(15);                        
   }
   else if(buttonState == LOW && pos > 0){
          myservo.write(pos--);             
          delay(15);                        
   }
}

 